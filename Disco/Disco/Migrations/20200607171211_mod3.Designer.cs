// <auto-generated />
using System;
using Disco;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Disco.Migrations
{
    [DbContext(typeof(DiscoContext))]
    [Migration("20200607171211_mod3")]
    partial class mod3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Disco.Entities.Cards", b =>
                {
                    b.Property<long>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpirDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Lost")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.HasKey("CardId");

                    b.HasIndex("MemberId");

                    b.ToTable("Cards","dbo");
                });

            modelBuilder.Entity("Disco.Entities.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BlackListDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Member","dbo");
                });

            modelBuilder.Entity("Disco.Models.BlackListLog", b =>
                {
                    b.Property<long>("BlackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BlackListDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("BlackId");

                    b.HasIndex("MemberId");

                    b.ToTable("BlackList","dbo");
                });

            modelBuilder.Entity("Disco.Models.IdentityCard", b =>
                {
                    b.Property<int>("idcarid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("NatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValiDate")
                        .HasColumnType("datetime2");

                    b.HasKey("idcarid");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("IdentiyCard","dbo");
                });

            modelBuilder.Entity("Disco.Entities.Cards", b =>
                {
                    b.HasOne("Disco.Entities.Member", "Member")
                        .WithMany("Cards")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Disco.Models.BlackListLog", b =>
                {
                    b.HasOne("Disco.Entities.Member", "Member")
                        .WithMany("BlackListLogs")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Disco.Models.IdentityCard", b =>
                {
                    b.HasOne("Disco.Entities.Member", "Member")
                        .WithOne("Identity")
                        .HasForeignKey("Disco.Models.IdentityCard", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
